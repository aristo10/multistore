import{as as r,at as e,au as o}from"./index-ed7845ca.js";const c=r.injectEndpoints({endpoints:s=>({getAllTaskStatus:s.query({query:({status:t})=>({url:`task-status?status=${t}`}),providesTags:["TaskStatusAll"]}),getAllTaskStatusByProjectId:s.query({query:t=>({url:`task-status/${t}/project`}),providesTags:["TaskStatusById"]}),getTaskStatus:s.query({query:t=>({url:`task-status/${t}`}),providesTags:["TaskStatus"]}),addTaskStatus:s.mutation({query:t=>({method:"POST",headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},url:"task-status/",body:t}),async onQueryStarted(t,{queryFulfilled:a,dispatch:n}){try{await a,e("Task-status added successfully","success")}catch{e("Something went wrong, Please try again","warning")}},invalidatesTags:["TaskStatus","TaskStatusAll","TaskStatusById"]}),updateTaskStatus:s.mutation({query:({id:t,values:a})=>({method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},url:`task-status/${t}`,body:a}),async onQueryStarted(t,{queryFulfilled:a,dispatch:n}){try{await a,e("Task Status updated successfully","success")}catch{e("Something went wrong, Please try again","warning")}},invalidatesTags:["TaskStatus","TaskStatus","TaskStatusAll","TaskStatusById"]}),updateTaskStatusId:s.mutation({query:({id:t,values:a})=>({method:"PUT",headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"},url:`task-status/${t}?query=taskStatus`,body:a}),async onQueryStarted(t,{queryFulfilled:a,dispatch:n}){try{await a,e("Task Status updated successfully","success")}catch{e("Something went wrong, Please try again","warning")}},invalidatesTags:["TaskStatus","TaskStatus","TaskStatusAll","TaskStatusById"]}),deleteTaskStatus:s.mutation({query:t=>({url:`task-status/${t}`,method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"}}),async onQueryStarted(t,{queryFulfilled:a,dispatch:n}){try{await a,e("Deleted Task Status successful","warning")}catch(u){o(u,!0)}},invalidatesTags:["TaskStatus","TaskStatus","TaskStatusAll","TaskStatusById"]})})}),{useGetAllTaskStatusQuery:i,useGetAllTaskStatusByProjectIdQuery:d,useGetTaskStatusQuery:l,useAddTaskStatusMutation:k,useUpdateTaskStatusMutation:y,useUpdateTaskStatusIdMutation:S,useDeleteTaskStatusMutation:p}=c;export{y as a,k as b,d as c,c as t,l as u};
